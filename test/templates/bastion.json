"basPrefix": {
    "value": "[parameters('basPrefix')]"
},
"enableAzBastion": {
    "value": "[parameters('enableAzBastion')]"
},
"subnetMaskForAzBastion": {
    "value": "[parameters('subnetMaskForAzBastion')]"
},

"basPrefix": {
    "type": "string",
    "maxLength": 3,
    "metadata": {
        "description": "Provide the Azure Bastion prefix"
    }
},
"enableAzBastion": {
    "type": "string",
    "allowedValues": [
        "Yes",
        "No"
    ],
    "defaultValue": "No"
},
"subnetMaskForAzBastion": {
    "type": "string",
    "defaultValue": ""
},
"basPrefix": {
    "type": "string",
    "maxLength": 3
},
"enableAzBastion": {
    "type": "string",
    "allowedValues": [
        "Yes",
        "No"
    ],
    "defaultValue": "No"
},
"subnetMaskForAzBastion": {
    "type": "string",
    "defaultValue": ""
},

"azBastionName": "[toLower(concat(variables('namingPrefix'), '-', parameters('basPrefix'), '-001'))]",
        "azBastionSubnetId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureBastionSubnet')]",
        "azBastionIpName": "[toLower(concat(variables('namingPrefix'), '-', parameters('pipPrefix'), '-004'))]",
        "azBastionPipId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Network/publicIPAddresses/', variables('azBastionIpName'))]",



                                                // Conditional deployment of Public IP for Azure Bastion   
                                                {
                                                    "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                                    "type": "Microsoft.Network/publicIpAddresses",
                                                    "apiVersion": "[variables('apiVersions').publicIpAddresses]",
                                                    "name": "[variables('azBastionIpName')]",
                                                    "location": "[parameters('location')]",
                                                    "dependsOn": [
                                                        "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureBastionSubnet')]"
                                                    ],
                                                    "sku": {
                                                        "name": "Standard"
                                                    },
                                                    "properties": {
                                                        "publicIPAllocationMethod": "Static",
                                                        "publicIPAddressVersion": "IPv4"
                                                    }
                                                },
                                                // Conditional deployment of Azure Bastion
                                                {
                                                    "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                                    "apiVersion": "[variables('apiVersions').bastionHosts]",
                                                    "type": "Microsoft.Network/bastionHosts",
                                                    "name": "[variables('azBastionName')]",
                                                    "location": "[resourceGroup().location]",
                                                    "dependsOn": [
                                                        "[concat('Microsoft.Network/publicIpAddresses/', variables('azBastionIpName'))]",
                                                        "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureBastionSubnet')]"
                                                    ],
                                                    "properties": {
                                                        "ipConfigurations": [
                                                            {
                                                                "name": "[variables('azBastionIpName')]",
                                                                "properties": {
                                                                    "subnet": {
                                                                        "id": "[variables('azBastionSubnetId')]"
                                                                    },
                                                                    "publicIPAddress": {
                                                                        "id": "[variables('azBastionPipId')]"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }



                                                                                        // Conditional deployment of Conditional deployment of Azure Bastion Subnet
                                        {
                                            "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                            "type": "Microsoft.Network/virtualNetworks/subnets",
                                            "apiVersion": "[variables('apiVersions').subnets]",
                                            "name": "[concat(variables('azVnetName'), '/', 'AzureBastionSubnet')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/networkSecurityGroups/', variables('NsgName004'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureFirewallSubnet')]"
                                            ],
                                            "properties": {
                                                "addressPrefix": "[parameters('subnetMaskForAzBastion')]",
                                                "networkSecurityGroup": {
                                                    "id": "[variables('NsgId004')]"
                                                }
                                            }
                                        },
                                        // Conditional deployment of Azure Bastion NSG
                                        {
                                            "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                            "type": "Microsoft.Network/networkSecurityGroups",
                                            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
                                            "name": "[variables('nsgName004')]",
                                            "location": "[parameters('location')]",
                                            "tags": {
                                                "appliedSubnet": "[concat(variables('azVnetName'), '/AzureBastionSubnet')]"
                                            },
                                            "properties": {
                                                "securityRules": [
                                                ]
                                            }
                                        },

                                        "NsgName004": "[toLower(concat(variables('namingPrefix'), '-', parameters('nsgPrefix'), '-azureBastion'))]",
                                        "NsgId004": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/networkSecurityGroups/', variables('nsgName004'))]",