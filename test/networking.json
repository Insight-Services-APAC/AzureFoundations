{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "vngPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "vntPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "pipPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "azFwPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "udrPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "nsgPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "basPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "subscriptionTag": {
            "type": "string"
        },
        "ownerTag": {
            "type": "string"
        },
        "costCenterTag": {
            "type": "string"
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the Platform Landing Zone"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "displayName": "location",
                "description": "Location of the Platform Landing Zone"
            },
            "defaultValue": "[deployment().location]"
        },
        "enableHub": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableAzFw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableVpnGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableErGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableAzBastion": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36
        },
        "vpnGwType": {
            "type": "string",
            "allowedValues": [
                "PolicyBased",
                "RouteBased"
            ],
            "defaultValue": "RouteBased"
        },
        "subnetMaskForAzBastion": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForAzFw": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForGw": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "deploymentName": "[take(concat(deployment().name, '-networking'), 64)]",
        "namingPrefix": "[concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix'))]",
        "resourceGroupName": "[toLower(concat(variables('namingPrefix'), '-', parameters('argPrefix'), '-network'))]",
        "azVnetCidr": "[substring(parameters('addressPrefix'),0,sub(length(parameters('addressPrefix')), 3))]",
        "azVnetName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vntPrefix'), '-', variables('azVnetCidr')))]",
        "nwName": "[toLower(concat(variables('namingPrefix'), '-anw-', parameters('location')))]",
        "azVpnGwName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vngPrefix'), '-vpn'))]",
        "azVpnGwIpName": "[toLower(concat(variables('namingPrefix'), '-', parameters('pipPrefix'), '-001'))]",
        "azVpnGwSubnetId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/GatewaySubnet')]",
        "azVpnGwPipId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Network/publicIPAddresses/', variables('azVpnGwIpName'))]",
        "azErGwName": "[toLower(concat(variables('namingPrefix'), '-', parameters('vngPrefix'), '-er'))]",
        "azErGwIpName": "[toLower(concat(variables('namingPrefix'), '-', parameters('pipPrefix'), '-002'))]",
        "azErGwSubnetId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/GatewaySubnet')]",
        "azErGwPipId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Network/publicIPAddresses/', variables('azErGwIpName'))]",
        "azFwName": "[toLower(concat(variables('namingPrefix'), '-', parameters('azFwPrefix'), '-001'))]",
        "azFwSubnetId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureFirewallSubnet')]",
        "azFwIpName": "[toLower(concat(variables('namingPrefix'), '-', parameters('pipPrefix'), '-003'))]",
        "azFwPipId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Network/publicIPAddresses/', variables('azFwIpName'))]",
        "azBastionName": "[toLower(concat(variables('namingPrefix'), '-', parameters('basPrefix'), '-001'))]",
        "azBastionSubnetId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureBastionSubnet')]",
        "azBastionIpName": "[toLower(concat(variables('namingPrefix'), '-', parameters('pipPrefix'), '-004'))]",
        "azBastionPipId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Network/publicIPAddresses/', variables('azBastionIpName'))]",
        "UdrName002": "[toLower(concat(variables('namingPrefix'), '-', parameters('udrPrefix'), '-', 'GatewaySubnet'))]",
        "UdrId002": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', variables('resourceGroupName'),'/providers/Microsoft.Network/routeTables/', variables('udrName002'))]",
        "NsgName004": "[toLower(concat(variables('namingPrefix'), '-', parameters('nsgPrefix'), '-azureBastion'))]",
        "tags": {
            "environment": "[parameters('subscriptionTag')]",
            "owner": "[parameters('ownerTag')]",
            "costCenter": "[parameters('costCenterTag')]"
        },
        "apiVersions": {
            "deployments": "2020-06-01",
            "resourceGroups": "2020-06-01",
            "locks": "2016-09-01",
            "virtualNetworks": "2020-05-01",
            "subnets": "2020-05-01",
            "networkWatchers": "2019-11-01",
            "virtualNetworkLinks": "2020-01-01",
            "networkSecurityGroups": "2020-05-01",
            "routeTables": "2020-05-01",
            "publicIpAddresses": "2020-05-01",
            "virtualNetworkGateways": "2020-05-01",
            "azureFirewalls": "2020-05-01",
            "bastionHosts": "2020-05-01"
        }
    },
    "resources": [
        // Nested deployment for Azure Networking (Management Group Level)
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersions').deployments]",
            "name": "[variables('deploymentName')]",
            "location": "[deployment().location]",
            "subscriptionId": "[parameters('subscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        // Create Resource Group
                        {
                            "condition": "[and(equals(parameters('enableHub'), 'Yes'), not(empty(parameters('subscriptionId'))))]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('apiVersions').resourceGroups]",
                            "location": "[deployment().location]",
                            "name": "[variables('resourceGroupName')]",
                            "tags": {
                                "environment": "[variables('tags').environment]",
                                "owner": "[variables('tags').owner]",
                                "costCenter": "[variables('tags').costCenter]"
                            },
                            "properties": {}
                        },
                        // Nested deployment for Azure Networking (Subscription Level)
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "[variables('apiVersions').deployments]",
                            "name": "[variables('deploymentName')]",
                            "resourceGroup": "[variables('resourceGroupName')]",
                            "dependsOn": [
                                "[concat('Microsoft.Resources/resourceGroups/', variables('resourceGroupName'))]"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                        // Deploy Resource Group Lock
                                        {
                                            "type": "Microsoft.Authorization/locks",
                                            "apiVersion": "[variables('apiVersions').locks]",
                                            "name": "ResourceGroup-DontDelete",
                                            "properties": {
                                                "level": "CanNotDelete",
                                                "notes": "Prevent deletion of the resourceGroup"
                                            }
                                        },
                                        // Nested deployment for Azure Virtual Network (Resource Group Level)
                                        {
                                            "type": "Microsoft.Network/virtualNetworks",
                                            "apiVersion": "[variables('apiVersions').virtualNetworks]",
                                            "name": "[variables('azVnetName')]",
                                            "location": "[deployment().location]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/routeTables/', variables('UdrName002'))]"
                                            ],
                                            "properties": {
                                                "addressSpace": {
                                                    "addressPrefixes": [
                                                        "[parameters('addressPrefix')]"
                                                    ]
                                                }
                                            },
                                            "resources": [
                                            ]
                                        },
                                        // Conditional deployment of Network Watcher
                                        {
                                            "condition": "[and(equals(parameters('enableHub'), 'Yes'), not(empty(parameters('subscriptionId'))))]",
                                            "type": "Microsoft.Network/networkWatchers",
                                            "apiVersion": "[variables('apiVersions').networkWatchers]",
                                            "name": "[variables('nwName')]",
                                            "location": "[deployment().location]",
                                            "tags": {},
                                            "properties": {},
                                            "resources": []
                                        },
                                        // Conditional deployment of Azure Firewall Subnet
                                        {
                                            "condition": "[and(equals(parameters('enableAzFw'), 'Yes'), not(empty(parameters('subnetMaskForAzFw'))))]",
                                            "type": "Microsoft.Network/virtualNetworks/subnets",
                                            "apiVersion": "[variables('apiVersions').subnets]",
                                            "name": "[concat(variables('azVnetName'), '/', 'AzureFirewallSubnet')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/GatewaySubnet')]"
                                            ],
                                            "properties": {
                                                "addressPrefix": "[parameters('subnetMaskForAzFw')]"
                                            }
                                        },
                                        // Conditional deployment of Conditional deployment of Azure Bastion Subnet
                                        {
                                            "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                            "type": "Microsoft.Network/virtualNetworks/subnets",
                                            "apiVersion": "[variables('apiVersions').subnets]",
                                            "name": "[concat(variables('azVnetName'), '/', 'AzureBastionSubnet')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/networkSecurityGroups/', variables('NsgName004'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureFirewallSubnet')]"
                                            ],
                                            "properties": {
                                                "addressPrefix": "[parameters('subnetMaskForAzBastion')]"

                                            }
                                        },
                                        // Conditional deployment of Azure Bastion NSG
                                        {
                                            "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                            "type": "Microsoft.Network/networkSecurityGroups",
                                            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
                                            "name": "[variables('nsgName004')]",
                                            "location": "[parameters('location')]",
                                            "tags": {
                                                "appliedSubnet": "[concat(variables('azVnetName'), '/AzureBastionSubnet')]"
                                            },
                                            "properties": {
                                                "securityRules": [
                                                    {
                                                        "name": "allowHttpsInbound",
                                                        "properties": {
                                                            "description": "This is required for inbound HTTPS access from the internet.",
                                                            "protocol": "Tcp",
                                                            "sourcePortRange": "*",
                                                            "sourceAddressPrefix": "Internet",
                                                            "destinationPortRange": "443",
                                                            "destinationAddressPrefix": "*",
                                                            "access": "Allow",
                                                            "priority": 120,
                                                            "direction": "Inbound"
                                                        }
                                                    },
                                                    {
                                                        "name": "allowGatewayManagerInbound",
                                                        "properties": {
                                                            "description": "This is required for inbound HTTPS access from the Gateway Manager.",
                                                            "protocol": "Tcp",
                                                            "sourcePortRange": "*",
                                                            "sourceAddressPrefix": "GatewayManager",
                                                            "destinationPortRange": "443",
                                                            "destinationAddressPrefix": "*",
                                                            "access": "Allow",
                                                            "priority": 130,
                                                            "direction": "Inbound"
                                                        }
                                                    },
                                                    {
                                                        "name": "allowAzureLoadBalancer",
                                                        "properties": {
                                                            "description": "This is required for inbound HTTPS access from the Azure Load Balancer.",
                                                            "protocol": "Tcp",
                                                            "sourcePortRange": "*",
                                                            "sourceAddressPrefix": "AzureLoadBalancer",
                                                            "destinationPortRange": "443",
                                                            "destinationAddressPrefix": "*",
                                                            "access": "Allow",
                                                            "priority": 140,
                                                            "direction": "Inbound"
                                                        }
                                                    },
                                                    {
                                                        "name": "allowBastionHostCommunication",
                                                        "properties": {
                                                            "description": "This is required for inbound HTTPS access from the Azure Load Balancer.",
                                                            "protocol": "Tcp",
                                                            "sourcePortRange": "*",
                                                            "sourceAddressPrefix": "VirtualNetwork",
                                                            "destinationPortRanges": [
                                                                "8080",
                                                                "5701"
                                                            ],
                                                            "destinationAddressPrefix": "VirtualNetwork",
                                                            "access": "Allow",
                                                            "priority": 150,
                                                            "direction": "Inbound"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        // Conditional deployment of Gateway Subnet
                                        {
                                            "condition": "[and(or(equals(parameters('enableVpnGw'), 'Yes'), equals(parameters('enableErGw'), 'Yes')), not(empty(parameters('subnetMaskForGw'))))]",
                                            "type": "Microsoft.Network/virtualNetworks/subnets",
                                            "apiVersion": "[variables('apiVersions').subnets]",
                                            "name": "[concat(variables('azVnetName'), '/', 'GatewaySubnet')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'))]",
                                                "[concat('Microsoft.Network/routeTables/', variables('udrName002'))]"
                                            ],
                                            "properties": {
                                                "addressPrefix": "[parameters('subnetMaskForGw')]",
                                                "routeTable": {
                                                    "id": "[variables('udrId002')]"
                                                }
                                            }
                                        },
                                        // Conditional deployment of Gateway Route Table
                                        {
                                            "condition": "[and(or(equals(parameters('enableVpnGw'), 'Yes'), equals(parameters('enableErGw'), 'Yes')), not(empty(parameters('subnetMaskForGw'))))]",
                                            "type": "Microsoft.Network/routeTables",
                                            "apiVersion": "[variables('apiVersions').routeTables]",
                                            "name": "[variables('udrName002')]",
                                            "location": "[parameters('location')]",
                                            "tags": {
                                                "appliedSubnet": "[concat(variables('azVnetName'), '/', 'GatewaySubnet')]"
                                            },
                                            "properties": {
                                            }
                                        },
                                        // Conditional deployment of Public IP for VPN Gateway
                                        {
                                            "condition": "[and(equals(parameters('enableVpnGw'), 'Yes'), not(empty(parameters('subnetMaskForGw'))))]",
                                            "type": "Microsoft.Network/publicIpAddresses",
                                            "apiVersion": "[variables('apiVersions').publicIpAddresses]",
                                            "name": "[variables('azVpnGwIpName')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                "publicIPAllocationMethod": "Dynamic"
                                            }
                                        },
                                        // Conditional deployment of VPN Gateway
                                        {
                                            "condition": "[and(equals(parameters('enableVpnGw'), 'Yes'), not(empty(parameters('subnetMaskForGw'))))]",
                                            "type": "Microsoft.Network/virtualNetworkGateways",
                                            "apiVersion": "[variables('apiVersions').virtualNetworkGateways]",
                                            "name": "[variables('azVpnGwName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/publicIPAddresses/', variables('azVpnGwIpName'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/GatewaySubnet')]"
                                            ],
                                            "properties": {
                                                "gatewayType": "Vpn",
                                                "vpnType": "[parameters('vpnGwType')]",
                                                "ipConfigurations": [
                                                    {
                                                        "name": "default",
                                                        "properties": {
                                                            "privateIPAllocationMethod": "Dynamic",
                                                            "subnet": {
                                                                "id": "[variables('azVpnGwSubnetId')]"
                                                            },
                                                            "publicIpAddress": {
                                                                "id": "[variables('azVpnGwPipId')]"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "sku": {
                                                    "name": "VpnGw1",
                                                    "tier": "VpnGw1"
                                                }
                                            }
                                        },
                                        // Conditional deployment of Public IP for ER Gateway
                                        {
                                            "condition": "[and(equals(parameters('enableErGw'), 'Yes'), not(empty(parameters('subnetMaskForGw'))))]",
                                            "type": "Microsoft.Network/publicIpAddresses",
                                            "apiVersion": "[variables('apiVersions').publicIpAddresses]",
                                            "name": "[variables('azErGwIpName')]",
                                            "location": "[parameters('location')]",
                                            "properties": {
                                                "publicIPAllocationMethod": "Dynamic"
                                            }
                                        },
                                        // Conditional deployment of ER Gateway
                                        {
                                            "condition": "[and(equals(parameters('enableErGw'), 'Yes'), not(empty(parameters('subnetMaskForGw'))))]",
                                            "type": "Microsoft.Network/virtualNetworkGateways",
                                            "apiVersion": "[variables('apiVersions').virtualNetworkGateways]",
                                            "name": "[variables('azErGwName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/publicIPAddresses/', variables('azErGwIpName'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/GatewaySubnet')]"
                                            ],
                                            "properties": {
                                                "gatewayType": "ExpressRoute",
                                                "ipConfigurations": [
                                                    {
                                                        "name": "default",
                                                        "properties": {
                                                            "privateIPAllocationMethod": "Dynamic",
                                                            "subnet": {
                                                                "id": "[variables('azErGwSubnetId')]"
                                                            },
                                                            "publicIpAddress": {
                                                                "id": "[variables('azErGwPipId')]"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "sku": {
                                                    "name": "Standard",
                                                    "tier": "Standard"
                                                }
                                            }
                                        },
                                        // Conditional deployment of Public IP for Azure Firewall
                                        {
                                            "condition": "[and(equals(parameters('enableAzFw'), 'Yes'), not(empty(parameters('subnetMaskForAzFw'))))]",
                                            "type": "Microsoft.Network/publicIpAddresses",
                                            "apiVersion": "[variables('apiVersions').publicIpAddresses]",
                                            "name": "[variables('azFwIpName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureFirewallSubnet')]"
                                            ],
                                            "sku": {
                                                "name": "Standard"
                                            },
                                            "properties": {
                                                "publicIPAllocationMethod": "Static",
                                                "publicIPAddressVersion": "IPv4"
                                            }
                                        },
                                        // Conditional deployment of Azure Firewall
                                        {
                                            "condition": "[and(equals(parameters('enableAzFw'), 'Yes'), not(empty(parameters('subnetMaskForAzFw'))))]",
                                            "type": "Microsoft.Network/azureFirewalls",
                                            "apiVersion": "[variables('apiVersions').azureFirewalls]",
                                            "name": "[variables('azFwName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/publicIpAddresses/', variables('azFwIpName'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureFirewallSubnet')]"
                                            ],
                                            "properties": {
                                                "sku": {
                                                    "Name": "AZFW_VNet",
                                                    "Tier": "Standard"
                                                },
                                                "ipConfigurations": [
                                                    {
                                                        "name": "[variables('azFwIpName')]",
                                                        "properties": {
                                                            "subnet": {
                                                                "id": "[variables('azFwSubnetId')]"
                                                            },
                                                            "publicIPAddress": {
                                                                "id": "[variables('azFwPipId')]"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        // Conditional deployment of Public IP for Azure Bastion   
                                        {
                                            "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                            "type": "Microsoft.Network/publicIpAddresses",
                                            "apiVersion": "[variables('apiVersions').publicIpAddresses]",
                                            "name": "[variables('azBastionIpName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureBastionSubnet')]"
                                            ],
                                            "sku": {
                                                "name": "Standard"
                                            },
                                            "properties": {
                                                "publicIPAllocationMethod": "Static",
                                                "publicIPAddressVersion": "IPv4"
                                            }
                                        },
                                        // Conditional deployment of Azure Bastion
                                        {
                                            "condition": "[and(equals(parameters('enableAzBastion'), 'Yes'), not(empty(parameters('subnetMaskForAzBastion'))))]",
                                            "apiVersion": "[variables('apiVersions').bastionHosts]",
                                            "type": "Microsoft.Network/bastionHosts",
                                            "name": "[variables('azBastionName')]",
                                            "location": "[parameters('location')]",
                                            "dependsOn": [
                                                "[concat('Microsoft.Network/publicIpAddresses/', variables('azBastionIpName'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'))]",
                                                "[concat('Microsoft.Network/virtualNetworks/', variables('azVnetName'), '/subnets/AzureBastionSubnet')]"
                                            ],
                                            "properties": {
                                                "ipConfigurations": [
                                                    {
                                                        "name": "[variables('azBastionIpName')]",
                                                        "properties": {
                                                            "subnet": {
                                                                "id": "[variables('azBastionSubnetId')]"
                                                            },
                                                            "publicIPAddress": {
                                                                "id": "[variables('azBastionPipId')]"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ]
}
