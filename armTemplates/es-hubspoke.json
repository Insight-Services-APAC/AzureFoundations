{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the company identifier prefix (max 5 characters)"
            }
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the location identifier prefix (3 characters)"
            }
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the environment identifier prefix (3 characters)"
            }
        },
        "resourceGroupPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the resource group identifier"
            }
        },
        "logAnalyticsPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the log analytics identifier prefix"
            }
        },
        "vngPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the virtual network gateway identifier prefix"
            }
        },
        "vnetPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the virtual network identifier prefix"
            }
        },
        "publicIpPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the public IP identifier prefix"
            }
        },
        "azureFwPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Firewall identifier prefix"
            }
        },
        "automationPrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Automation identifier prefix"
            }
        },
        "storagePrefix": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the Azure Storage identifier prefix"
            }
        },
        "platformLzSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id of an existing, empty subscription you want to dedicate to the Platform LZ. If you don't want to bring a subscription, leave this parameter empty as is."
            }
        },
        "enableLogAnalytics": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableStorageAccount": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, a storage account will be created for diagnostics. If 'No', it will be ignored."
            }
        },
        "enableAsc": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableHub": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableAzFw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableVpnGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableAppGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableErGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableMgmt": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "vpnGwType": {
            "type": "string",
            "allowedValues": [
                "PolicyBased",
                "RouteBased"
            ],
            "defaultValue": "RouteBased"
        },
        "subnetMaskForAzFw": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForGw": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForAppGw": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForMgmt": {
            "type": "string",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[deployment().location]"
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the HUB"
            },
            "defaultValue": "192.168.0.0/24"
        },
        "denyPublicendpoints": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyPublicIP": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denySubnetWithoutNsg": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyIpForwarding": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyRdpInternet": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denySshInternet": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyVnetPeering": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyPrivateDnsZones": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        }
    },
    "variables": {
        "policyDef": "[uri(deployment().properties.templateLink.uri, 'auxiliary/policyDef.json')]",
        "policyAssignment": "[uri(deployment().properties.templateLink.uri, 'auxiliary/policyAssignment.json')]",
        "monitoring": "[uri(deployment().properties.templateLink.uri, 'auxiliary/logAnalytics.json')]",
        "storage": "[uri(deployment().properties.templateLink.uri, 'auxiliary/storageAccount.json')]",
        "diagnosticsAndSecurity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/diagnosticsAndSecurity.json')]",
        "netConnectivity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/hubspoke-connectivity.json')]",
        "appLz": "[uri(deployment().properties.templateLink.uri, 'auxiliary/appLz.json')]",
        "moveSubscription": "[concat(parameters('companyPrefix'), '-Platform', '/', parameters('platformLzSubscriptionId'))]",
        "noSubscription": "[concat(parameters('companyPrefix'), '-Platform', '/', 'na')]",
        "policyDefDeploymentName": "[take(concat('PolicyDef', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
        "policyAssignmentDeploymentName": "[take(concat('PolicyAssignment', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
        "monitoringDeploymentName": "[take(concat('Monitoring', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
        "storageDeploymentName": "[take(concat('Storage', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
        "diagnosticsAndSecurityDeploymentName": "[take(concat('DiagSecurity', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
        "netConnectivityDeploymentName": "[take(concat('Networking', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]",
        "appLzDeploymentName": "[take(concat('AppLZ', '-', deployment().location, '-', guid(parameters('companyPrefix'))), 64)]"
    },
    "resources": [
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('companyPrefix')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('policyDefDeploymentName')]",
            "location": "[deployment().location]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('companyPrefix'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('policyDef')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('policyAssignmentDeploymentName')]",
            "location": "[deployment().location]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "dependsOn": [
                "[variables('policyDefDeploymentName')]",
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('companyPrefix'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('policyAssignment')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-Platform')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('companyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-Decommissioned')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('companyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-Sandbox')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('companyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-AppLandingZones')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('companyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-Production')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('companyPrefix'), '-AppLandingZones'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', concat(parameters('companyPrefix'), '-AppLandingZones'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-Development')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('companyPrefix'), '-AppLandingZones'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', concat(parameters('companyPrefix'), '-AppLandingZones'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('companyPrefix'), '-Test')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('companyPrefix'), '-AppLandingZones'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', concat(parameters('companyPrefix'), '-AppLandingZones'))]"
                    }
                }
            }
        },
        {
            "condition": "[not(empty(parameters('platformLzSubscriptionId')))]",
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "2020-05-01",
            "name": "[if(not(empty(parameters('platformLzSubscriptionId'))), variables('moveSubscription'), variables('noSubscription'))]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('companyPrefix'), '-Platform'))]"
            ],
            "properties": {}
        },
        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))),equals(parameters('enableHub'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-Platform')]",
            "name": "[variables('netConnectivityDeploymentName')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups/subscriptions/', concat(parameters('companyPrefix'), '-Platform'), parameters('platformLzSubscriptionId'))]",
                "[variables('monitoringDeploymentName')]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('netConnectivity')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "resourceGroupPrefix": {
                        "value": "[parameters('resourceGroupPrefix')]"
                    },
                    "vngPrefix": {
                        "value": "[parameters('vngPrefix')]"
                    },
                    "vnetPrefix": {
                        "value": "[parameters('vnetPrefix')]"
                    },
                    "publicIpPrefix": {
                        "value": "[parameters('publicIpPrefix')]"
                    },
                    "azureFwPrefix": {
                        "value": "[parameters('AzureFwPrefix')]"
                    },
                    "storagePrefix": {
                        "value": "[parameters('storagePrefix')]"
                    },
                    "enableHub": {
                        "value": "[parameters('enableHub')]"
                    },
                    "enableAzFw": {
                        "value": "[parameters('enableAzFw')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "enableVpnGw": {
                        "value": "[parameters('enableVpnGw')]"
                    },
                    "enableErGw": {
                        "value": "[parameters('enableErGw')]"
                    },
                    "enableAppGw": {
                        "value": "[parameters('enableAppGw')]"
                    },
                    "enableMgmt": {
                        "value": "[parameters('enableMgmt')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    },
                    "vpnGwType": {
                        "value": "[parameters('vpnGwType')]"
                    },
                    "subnetMaskForAzFw": {
                        "value": "[parameters('subnetMaskForAzFw')]"
                    },
                    "subnetMaskForGw": {
                        "value": "[parameters('subnetMaskForGw')]"
                    },
                    "subnetMaskForAppGw": {
                        "value": "[parameters('subnetMaskForAppGw')]"
                    },
                    "subnetMaskForMgmt": {
                        "value": "[parameters('subnetMaskForMgmt')]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-Platform')]",
            "name": "[variables('monitoringDeploymentName')]",
            "dependsOn": [
                "[variables('policyDefDeploymentName')]",
                "[tenantResourceId('Microsoft.Management/managementGroups/subscriptions/', concat(parameters('companyPrefix'), '-Platform'), parameters('platformLzSubscriptionId'))]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('monitoring')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "resourceGroupPrefix": {
                        "value": "[parameters('resourceGroupPrefix')]"
                    },
                    "logAnalyticsPrefix": {
                        "value": "[parameters('logAnalyticsPrefix')]"
                    },
                    "automationPrefix": {
                        "value": "[parameters('automationPrefix')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))),equals(parameters('enableStorageAccount'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/subscriptions/', concat(parameters('companyPrefix'), '-Platform'))]",
            "name": "[variables('storageDeploymentName')]",
            "dependsOn": [
                "[variables('monitoringDeploymentName')]",
                "[tenantResourceId('Microsoft.Management/managementGroups/subscriptions/', concat(parameters('companyPrefix'), '-Platform'), parameters('platformLzSubscriptionId'))]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('storage')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "enableStorageAccount": {
                        "value": "[parameters('enableStorageAccount')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    }
                }
            }
        },
        {
            "condition": "[or(equals(parameters('denyPublicendpoints'), 'Yes'), equals(parameters('denyPublicIP'), 'Yes'), equals(parameters('denySubnetWithoutNsg'), 'Yes'), equals(parameters('denyIpForwarding'), 'Yes'), equals(parameters('denyRdpInternet'), 'Yes'), equals(parameters('denySshInternet'), 'Yes'), equals(parameters('denyVnetPeering'), 'Yes'), equals(parameters('denyPrivateDnsZones'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'), '-AppLandingZones')]",
            "name": "[variables('appLZDeploymentName')]",
            "dependsOn": [
                "[variables('policyDefDeploymentName')]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('appLz')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "denyPublicendpoints": {
                        "value": "[parameters('denyPublicendpoints')]"
                    },
                    "denyPublicIP": {
                        "value": "[parameters('denyPublicIP')]"
                    },
                    "denySubnetWithoutNsg": {
                        "value": "[parameters('denySubnetWithoutNsg')]"
                    },
                    "denyIPforwarding": {
                        "value": "[parameters('denyIpForwarding')]"
                    },
                    "denyRdpInternet": {
                        "value": "[parameters('denyRdpInternet')]"
                    },
                    "denySshInternet": {
                        "value": "[parameters('denySshInternet')]"
                    },
                    "denyVnetPeering": {
                        "value": "[parameters('denyVnetPeering')]"
                    },
                    "denyPrivateDnsZones": {
                        "value": "[parameters('denyPrivateDnsZones')]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))), or(equals(parameters('enableLogAnalytics'), 'Yes'), and(equals(parameters('enableAsc'), 'Standard'), equals(parameters('enableAsc'), 'Free'))))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
            "name": "[variables('diagnosticsAndSecurityDeploymentName')]",
            "dependsOn": [
                "[variables('monitoringDeploymentName')]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('diagnosticsAndSecurity')]"
                },
                "parameters": {
                    "companyPrefix": {
                        "value": "[parameters('companyPrefix')]"
                    },
                    "locationPrefix": {
                        "value": "[parameters('locationPrefix')]"
                    },
                    "environmentPrefix": {
                        "value": "[parameters('environmentPrefix')]"
                    },
                    "resourceGroupPrefix": {
                        "value": "[parameters('resourceGroupPrefix')]"
                    },
                    "logAnalyticsPrefix": {
                        "value": "[parameters('logAnalyticsPrefix')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "enableAsc": {
                        "value": "[parameters('enableAsc')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed.')]"
        }
    }
}