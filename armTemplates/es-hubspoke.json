{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleCompanyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the company identifier prefix (max 5 characters)"
            }
        },
        "environmentIdentifier": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the environment identifier prefix (3 characters)"
            }
        },
        "locationIdentifier": {
            "type": "string",
            "maxLength": 3,
            "metadata": {
                "description": "Provide the location identifier prefix (3 characters)"
            }
        },
        "platformLzSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription id of an existing, empty subscription you want to dedicate to the Platform LZ. If you don't want to bring a subscription, leave this parameter empty as is."
            }
        },
        "enableLogAnalytics": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableAsc": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Standard",
                "Free",
                "No"
            ],
            "metadata": {
                "description": "If 'Yes' is selected when also adding a subscription for management, ARM will assign two policies to enable auditing in your environment, into the Log Analytics workspace for platform monitoring. If 'No', it will be ignored."
            }
        },
        "enableHub": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableAzFw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableVpnGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableAppGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "enableErGw": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "vpnGwType": {
            "type": "string",
            "allowedValues": [
                "PolicyBased",
                "RouteBased"
            ],
            "defaultValue": "RouteBased"
        },
        "subnetMaskForAzFw": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForGw": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetMaskForAppGw": {
            "type": "string",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[deployment().location]"
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "addressPrefix",
                "description": "Address prefix of the HUB"
            },
            "defaultValue": "192.168.0.0/24"
        }
    },
    "variables": {
        "policyDefinitions": "[uri(deployment().properties.templateLink.uri, 'auxiliary/policies.json')]",
        "monitoring": "[uri(deployment().properties.templateLink.uri, 'auxiliary/logAnalytics.json')]",
        "diagnosticsAndSecurity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/diagnosticsAndSecurity.json')]",
        "connectivity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/hubspoke-connectivity.json')]",
        "moveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-Platform', '/', parameters('platformLzSubscriptionId'))]",
        "noSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-Platform', '/', 'na')]",
        "policyDeploymentName": "[take(concat('Policy', '-', deployment().location, '-', guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
        "monitoringDeploymentName": "[take(concat('Monitoring', '-', deployment().location, '-', guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
        "diagAndSecDeploymentName": "[take(concat('DiagSec', '-', deployment().location, '-', guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
        "connectivityDeploymentName": "[take(concat('Networking', '-', deployment().location, '-', guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]"
    },
    "resources": [
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('enterpriseScaleCompanyPrefix')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('policyDeploymentName')]",
            "location": "[deployment().location]",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('enterpriseScaleCompanyPrefix'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('policyDefinitions')]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-Platform')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('enterpriseScaleCompanyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-Decommissioned')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('enterpriseScaleCompanyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-Sandbox')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('enterpriseScaleCompanyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-AppLandingZones')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', parameters('enterpriseScaleCompanyPrefix'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-Production')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('enterpriseScaleCompanyPrefix'), '-AppLandingZones'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', concat(parameters('enterpriseScaleCompanyPrefix'), '-AppLandingZones'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Management/managementGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-NonProduction')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('enterpriseScaleCompanyPrefix'), '-AppLandingZones'))]"
            ],
            "properties": {
                "details": {
                    "parent": {
                        "id": "[tenantResourceId('Microsoft.Management/managementGroups/', concat(parameters('enterpriseScaleCompanyPrefix'), '-AppLandingZones'))]"
                    }
                }
            }
        },
        {
            "condition": "[not(empty(parameters('platformLzSubscriptionId')))]",
            "type": "Microsoft.Management/managementGroups/subscriptions",
            "apiVersion": "2020-05-01",
            "name": "[if(not(empty(parameters('platformLzSubscriptionId'))), variables('moveSubscription'), variables('noSubscription'))]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups', concat(parameters('enterpriseScaleCompanyPrefix'), '-Platform'))]"
            ],
            "properties": {}
        },

        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))),equals(parameters('enableHub'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'), '-Platform')]",
            "name": "[variables('connectivityDeploymentName')]",
            "dependsOn": [
                "[tenantResourceId('Microsoft.Management/managementGroups/subscriptions/', concat(parameters('enterpriseScaleCompanyPrefix'), '-Platform'), parameters('platformLzSubscriptionId'))]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('connectivity')]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "environmentIdentifier": {
                        "value": "[parameters('environmentIdentifier')]"
                    },
                    "locationIdentifier": {
                        "value": "[parameters('locationIdentifier')]"
                    },
                    "enableHub": {
                        "value": "[parameters('enableHub')]"
                    },
                    "enableAzFw": {
                        "value": "[parameters('enableAzFw')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "enableVpnGw": {
                        "value": "[parameters('enableVpnGw')]"
                    },
                    "enableErGw": {
                        "value": "[parameters('enableErGw')]"
                    },
                    "enableAppGw": {
                        "value": "[parameters('enableAppGw')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    },
                    "vpnGwType": {
                        "value": "[parameters('vpnGwType')]"
                    },
                    "subnetMaskForAzFw": {
                        "value": "[parameters('subnetMaskForAzFw')]"
                    },
                    "subnetMaskForGw": {
                        "value": "[parameters('subnetMaskForGw')]"
                    },
                    "subnetMaskForAppGw": {
                        "value": "[parameters('subnetMaskForAppGw')]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))),equals(parameters('enableLogAnalytics'), 'Yes'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'), '-Platform')]",
            "name": "[variables('monitoringDeploymentName')]",
            "dependsOn": [
                "[variables('policyDeploymentName')]",
                "[tenantResourceId('Microsoft.Management/managementGroups/subscriptions/', concat(parameters('enterpriseScaleCompanyPrefix'), '-Platform'), parameters('platformLzSubscriptionId'))]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('monitoring')]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "environmentIdentifier": {
                        "value": "[parameters('environmentIdentifier')]"
                    },
                    "locationIdentifier": {
                        "value": "[parameters('locationIdentifier')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(empty(parameters('platformLzSubscriptionId'))), or(equals(parameters('enableLogAnalytics'), 'Yes'), and(equals(parameters('enableAsc'), 'Standard'), equals(parameters('enableAsc'), 'Free'))))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]",
            "name": "[variables('diagAndSecDeploymentName')]",
            "dependsOn": [
                "[variables('monitoringDeploymentName')]"
            ],
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('diagnosticsAndSecurity')]"
                },
                "parameters": {
                    "topLevelManagementGroupPrefix": {
                        "value": "[parameters('enterpriseScaleCompanyPrefix')]"
                    },
                    "environmentIdentifier": {
                        "value": "[parameters('environmentIdentifier')]"
                    },
                    "locationIdentifier": {
                        "value": "[parameters('locationIdentifier')]"
                    },
                    "enableLogAnalytics": {
                        "value": "[parameters('enableLogAnalytics')]"
                    },
                    "enableAsc": {
                        "value": "[parameters('enableAsc')]"
                    },
                    "platformLzSubscriptionId": {
                        "value": "[parameters('platformLzSubscriptionId')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed.')]"
        }
    }
}