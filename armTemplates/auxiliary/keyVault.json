{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "environmentPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "argPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "staPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "akvPrefix": {
            "type": "string",
            "maxLength": 3
        },
        "enableAkv": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "enableStorage": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "environmentTag": {
            "type": "string"
        },
        "tenantId": {
            "type": "string"
        },
        "ownerTag": {
            "type": "string"
        },
        "platformLzSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36
        }
    },
    "variables": {
        "deploymentName": "[take(concat(deployment().name, '-hubspoke'), 64)]",
        "namingPrefix": "[concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix'))]",
        "storageNamingPrefix": "[concat(parameters('companyPrefix'), parameters('locationPrefix'), parameters('environmentPrefix'))]",
        "resourceGroupName": "[toLower(concat(parameters('companyPrefix'), '-', parameters('environmentPrefix'), '-', parameters('argPrefix'), '-security'))]",
        "tags": {
            "environment": "[parameters('environmentTag')]",
            "owner": "[parameters('ownerTag')]"
        },
        "keyVault": {
            "name": "[toLower(take(concat(variables('namingPrefix'), '-', parameters('akvPrefix'), '-', guid(parameters('companyPrefix'))), 24))]",
            "enabledForDeployment": true,
            "enabledForDiskEncryption": true,
            "enabledForTemplateDeployment": true,
            "sku": "Standard",
            "tenantId": "[parameters('tenantId')]"
        },
        "storage": {
            "name": "[take(toLower(concat(variables('storageNamingPrefix'), parameters('staPrefix'), guid(parameters('companyPrefix')))), 20)]",
            "sku": "Standard_LRS",
            "kind": "StorageV2",
            "use": "Diagnostics",
            "httpsOnly": true
        }
    },
    "resources": [
        {
            "condition": "[or(equals(parameters('enableAkv'), 'Yes'), equals(parameters('enableStorage'), 'Yes'), not(empty(parameters('platformLzSubscriptionId'))))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "keyVault",
            "location": "[deployment().location]",
            "subscriptionId": "[parameters('platformLzSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2020-06-01",
                            "location": "[deployment().location]",
                            "name": "[variables('resourceGroupName')]",
                            "tags": {
                                "environment": "[variables('tags').environment]",
                                "owner": "[variables('tags').owner]"
                            },
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2019-10-01",
                            "name": "[variables('deploymentName')]",
                            "resourceGroup": "[variables('resourceGroupName')]",
                            "dependsOn": [
                                "[concat('Microsoft.Resources/resourceGroups/', variables('resourceGroupName'))]"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {},
                                    "resources": [
                                        {
                                            "type": "Microsoft.Authorization/locks",
                                            "apiVersion": "2017-04-01",
                                            "name": "ResourceGroup-DontDelete",
                                            "properties": {
                                                "level": "CanNotDelete",
                                                "notes": "Prevent deletion of the resourceGroup"
                                            }
                                        },
                                        {
                                            "condition": "[equals(parameters('enableAkv'), 'Yes')]",
                                            "name": "[variables('keyVault').name]",
                                            "type": "Microsoft.KeyVault/vaults",
                                            "apiVersion": "2019-09-01",
                                            "location": "[deployment().location]",
                                            "properties": {
                                                "enabledForDeployment": "[variables('keyVault').enabledForDeployment]",
                                                "enabledForDiskEncryption": "[variables('keyVault').enabledForDiskEncryption]",
                                                "enabledForTemplateDeployment": "[variables('keyVault').enabledForTemplateDeployment]",
                                                "tenantId": "[variables('keyVault').tenantId]", 
                                                "accessPolicies":Â [],                                           
                                                "sku": {
                                                    "name": "[variables('keyVault').sku]",
                                                    "family": "A"
                                                },
                                                "networkAcls": {
                                                    "defaultAction": "Allow",
                                                    "bypass": "AzureServices"
                                                }
                                            }
                                        },
                                        {
                                            "condition": "[equals(parameters('enableStorage'), 'Yes')]",
                                            "type": "Microsoft.Storage/storageAccounts",
                                            "apiVersion": "2019-06-01",
                                            "name": "[variables('storage').name]",
                                            "location": "[deployment().location]",
                                            "sku": {
                                                "name": "[variables('storage').sku]"
                                            },
                                            "tags": {
                                                "storageSKU": "[variables('storage').sku]",
                                                "storageUse": "[variables('storage').use]"
                                            },
                                            "kind": "[variables('storage').kind]",
                                            "properties": {
                                                "supportsHttpsTrafficOnly": "[variables('storage').httpsOnly]"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ]
}